{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Macro Rendering Error","text":"<p>File: <code>index.md</code></p> <p>TemplateNotFound: 'macros.jinja' not found in search path: '/home/runner/work/mkdocs-api-poc/mkdocs-api-poc/docs'</p> <pre><code>Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/mkdocs_macros/plugin.py\", line 688, in render\n    return md_template.render(**page_variables)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 1295, in render\n    self.environment.handle_exception()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 942, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"&lt;template&gt;\", line 1, in top-level template code\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/loaders.py\", line 209, in get_source\n    raise TemplateNotFound(\njinja2.exceptions.TemplateNotFound: 'macros.jinja' not found in search path: '/home/runner/work/mkdocs-api-poc/mkdocs-api-poc/docs'\n</code></pre>"},{"location":"branch-modell/","title":"Branch Modell","text":"<p>Im ZETA GitHub Repository werden Branches verwendet um den Status der Weiterentwicklung und das Review von \u00c4nderungen abzubilden.</p> <p>Folgende Branches werden verwendet:</p> <ul> <li>main (enth\u00e4lt den letzten freigegebenen Stand der Entwicklung; besteht permanent)</li> <li>develop (enth\u00e4lt den Stand der fertig entwickelten Features und wird zum Review durch Industriepartner und Gesellschafter verwendet; basiert auf main; nach Freigabe erfolgt ein merge in main und ein Release wird erzeugt; besteht permanent)</li> <li>feature/name (in feature branches werden neue Features entwickelt; basiert auf develop; nach Fertigstellung erfolgt ein merge in develop; wird nach dem merge gel\u00f6scht)</li> <li>hotfix/name (in hotfix branches werden Hotfixes entwickelt; basiert auf main; nach Fertigstellung erfolgt ein merge in develop und in main; wird nach dem merge gel\u00f6scht)</li> <li>concept/name (in concept branches werden neue Konzepte entwickelt; basiert auf develop; dient der Abstimmung mit Dritten; es erfolgt kein merge; wird nach Bedarf gel\u00f6scht)</li> <li>misc/name (nur f\u00fcr internen Gebrauch der gematik; es erfolgt kein merge; wird nach Bedarf gel\u00f6scht)</li> </ul>"},{"location":"license/","title":"License","text":"<p>Copyright (c) 2022 gematik GmbH</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"api/zeta-api-versionen/","title":"ZETA API Versionen","text":"<ul> <li>ZETA API v1</li> </ul>"},{"location":"api/v1/","title":"Macro Rendering Error","text":"<p>File: <code>api/v1/index.md</code></p> <p>KeyError: 'data'</p> <pre><code>Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/mkdocs_macros/plugin.py\", line 688, in render\n    return md_template.render(**page_variables)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 1295, in render\n    self.environment.handle_exception()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 942, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"&lt;template&gt;\", line 3, in top-level template code\n  File \"/home/runner/work/mkdocs-api-poc/mkdocs-api-poc/main.py\", line 21, in badge\n    if 'badges' not in env.variables['data']:\n                       ~~~~~~~~~~~~~^^^^^^^^\nKeyError: 'data'\n</code></pre>"},{"location":"zeta-guard/v1/","title":"Macro Rendering Error","text":"<p>File: <code>zeta-guard/v1/index.md</code></p> <p>KeyError: 'data'</p> <pre><code>Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/mkdocs_macros/plugin.py\", line 688, in render\n    return md_template.render(**page_variables)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 1295, in render\n    self.environment.handle_exception()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 942, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"&lt;template&gt;\", line 3, in top-level template code\n  File \"/home/runner/work/mkdocs-api-poc/mkdocs-api-poc/main.py\", line 21, in badge\n    if 'badges' not in env.variables['data']:\n                       ~~~~~~~~~~~~~^^^^^^^^\nKeyError: 'data'\n</code></pre>"},{"location":"spec-vsdm2/","title":"Index","text":""},{"location":"spec-vsdm2/#spezifikation-vsdm-20-fhir-profile-und-api","title":"Spezifikation VSDM 2.0 FHIR-Profile und API","text":""},{"location":"spec-vsdm2/#disclaimer","title":"Disclaimer","text":"<p>Dieses Dokument beschreibt die f\u00fcr die Implementierung des Versicherungsstammdatenmanagements (VSDM) 2.0 erforderlichen Vorgaben. Weitere Vorgaben zur Implementierung der Anteile von PoPP und Zero Trust sind zum Stand der Ver\u00f6ffentlichung von VSDM 2.0 nicht Bestandteil dieses Dokuments. Die Aufnahme der Implementierungsvorgaben aus PoPP und Zero Trust in den ILF f\u00fcr VSDM 2.0 erfolgt iterativ sobald die notwendigen Informationen aus diesen Implementierungsleitf\u00e4den vorliegen.</p> <p>Die in der Spezifikation VSDM 2.0 [gemSpec_VSDM_2] enthaltenen und in den Steckbrief [gemSST_CS_VSDM_2] ausgeleiteten Anforderungen an Clientsysteme haben informativen Charakter und treffen Festlegungen \u00fcber diesen Implementierungsleitfaden hinaus. Die Anforderungen dienen zur Unterst\u00fctzung der Implementierung durch Prim\u00e4rsystemhersteller.</p>"},{"location":"spec-vsdm2/#einleitung","title":"Einleitung","text":"<p>Die gematik geht neue Wege und m\u00f6chte auf diesem Weg die Nutzung der Schnittstellen rund um das VSDM 2.0 vorstellen. Die Beschreibung dieser API erg\u00e4nzt die normativen Dokumente der gematik sowie die Festlegungen \u00fcber die VSDM-Profile (inkl. Beispielen) des genutzten FHIR-Standards.</p> <p>Auf den folgenden Seiten stellt die gematik die Nutzung der Schnittstellen durch die Prim\u00e4rsysteme der Leistungserbringer vor.</p>"},{"location":"spec-vsdm2/#was-ist-vsdm-20","title":"Was ist VSDM 2.0","text":"<p>VSDM steht f\u00fcr \u201eVersichertenstammdatenmanagement\u201c. Es ist ein Teil der Telematikinfrastruktur (TI) im deutschen Gesundheitswesen und dient der Verwaltung und dem Abgleich der Stammdaten von gesetzlich versicherten Personen. VSDM 2.0 ist die Weiterentwicklung des bestehenden VSDM 1.0. Die Versichertenstammdaten (VSD) werden mit VSDM 2.0 nicht mehr auf der eGK des Versicherten gespeichert und aktualisiert sondern direkt vom Prim\u00e4rsystem (PS) des Leistungserbringers (LE) vom Fachdienst der Krankenkasse abgerufen und ggf. im PS aktualisiert. W\u00e4hrend bei VSDM 1.0 in den Anwendungsf\u00e4llen die Komponenten Konnektor, eHealth Kartenterminals, eGK, SMC-B, Intermedi\u00e4r und schlie\u00dflich die VSDM-Backend-Dienste des Versicherers zum Einsatz kommen, reduziert VSDM 2.0 die Abh\u00e4ngigkeiten von diesen Komponenten.  Mit der Initiative TI 2.0 wird die gesamte Infrastruktur modernisiert und auf den neuesten Stand der Sicherheits- und Architekturprinzipien gebracht.</p> <p>In der TI 2.0 wird der Nachweis des Versorgungskontextes mittels PoPP (\u201eProof-of-Patient-Presence\u201c) von fachlichen Anwendungsf\u00e4llen entkoppelt. Bei VSDM 2.0  ist dies die Bereitstellung demografischer Daten. Die Versicherer stellen also eine einfache FHIR-REST-API bereit, mit der die Client-Software der Arztpraxis \u201enur\u201c zus\u00e4tzliche Daten anfordert, indem sie ein legitimes PoPP-Token bereitstellt.</p> <p>Im nachfolgend verlinkten Kapitel finden Sie eine \u00dcbersicht, in welchem Kontext VSDM, PoPP und Zero Trust zueinander stehen:</p> <p>Kontext VSDM/PoPP/ZeroTrust</p> <p>Funktionen des VSDM: - Stammdatenabgleich: \u00dcber das VSDM 2.0 werden die Versichertenstammdaten, wie Name, Geburtsdatum, Anschrift, und Versicherungsschutz, bei jedem Arztbesuch online abgerufen und ggf.  aktualisiert. - Sicherstellung der Aktualit\u00e4t: Es soll sichergestellt werden, dass die im Prim\u00e4rsystem gespeicherten Daten stets aktuell sind. - Datensicherheit: Die Daten werden verschl\u00fcsselt und sicher \u00fcber die Telematikinfrastruktur \u00fcbertragen.</p>"},{"location":"spec-vsdm2/#anwendungsszenarien","title":"Anwendungsszenarien","text":"<p>In diesem Kapitel finden Sie eine Beschreibung der Anwendungsszenarien VSDM 2.0 f\u00fcr die relevanten Sektoren des Gesundheitswesens.</p> <p>Anwendungsszenarien</p>"},{"location":"spec-vsdm2/#anwendungsfalle-in-vsdm-20","title":"Anwendungsf\u00e4lle in VSDM 2.0","text":"<p>Im nachfolgend verlinkten Kapitel finden Sie die \u00dcbersicht der Anwendungsf\u00e4lle im Kontext VSDM 2.0.</p> <p>Anwendungsf\u00e4lle</p>"},{"location":"spec-vsdm2/#ablaufe-im-primarsystem","title":"Abl\u00e4ufe im Prim\u00e4rsystem","text":"<p>Im Rahmen der Anwendungsf\u00e4lle finden im Prim\u00e4rsystem weitere Abl\u00e4ufe im Zusammenhang mit der Versorgung des Versicherten statt. Hier finden Sie Informationen zu den Abl\u00e4ufen im Prim\u00e4rsystem und Interaktionen des Prim\u00e4rsystems mit dem Nutzer.</p> <p>Abl\u00e4ufe</p> <p>Prim\u00e4rsystem-Interaktionen</p>"},{"location":"spec-vsdm2/#informationsmodell-vsd","title":"Informationsmodell VSD","text":"<p>Hier geht es zur Informationsseite zum neuen Informationsmodell f\u00fcr VSDM 2.0.</p> <p>Anmerkung: Die Festlegung der finalen Inhalte des Informationsmodells erfolgt im Rahmen der Fortschreibung dieser Spezifikation. Die in diesem Dokument dargestellten Informationen stellen somit lediglich den bis zum Zeitpunkt der Ver\u00f6ffentlichung abgestimmten Stand dar.</p> <p>Informationsmodell</p>"},{"location":"spec-vsdm2/#prufziffer","title":"Pr\u00fcfziffer","text":"<p>Bei jedem erfolgreich durchgef\u00fchrten Abruf der VSD wird von Fachdienst VSDM 2.0 auch immer die Pr\u00fcfziffer \u00fcbermittelt. Diese wird im Prim\u00e4rsystem gespeichert und kann den Abrechnungsunterlagen beigef\u00fcgt werden.</p> <p>Hier finden Sie weitere Informationen zur Pr\u00fcfziffer f\u00fcr VSDM 2.0.</p> <p>Pr\u00fcfziffer </p>"},{"location":"spec-vsdm2/#fehlerbehandlung","title":"Fehlerbehandlung","text":"<p>Hier geht es zur Informationsseite zum Umgang mit Fehlermeldungen</p> <p>Fehlermeldungen</p> <p>Hier geht es zur Informationsseite zu Statuscodes </p> <p>Statuscodes</p>"},{"location":"spec-vsdm2/#fhir-profile-vsdm-20","title":"FHIR Profile VSDM 2.0","text":"<p>In VSDM 1.0 wurde ein propriet\u00e4res XML-Datenformat in einer SOAP-Servicekette verwendet. Mit VSDM 2.0 wird der VSD Datensatz in den FHIR-Standard migriert, der im deutschen Gesundheitswesen immer mehr zum Einsatz kommt. Die FHIR-Profile und Beispielressourcen werden im offiziellen VSDM 2 simplifier project ver\u00f6ffentlicht.</p>"},{"location":"spec-vsdm2/#mitgeltende-dokumente-und-informationen","title":"Mitgeltende Dokumente und Informationen","text":"<p>Hier finden Sie eine \u00dcbersicht zu den weiterf\u00fchrenden Dokumenten zur Implementierung.</p> <ul> <li>Spezifikation VSDM 2.0</li> <li>FHIR-Profile VSDM 2.0</li> <li>Steckbrief Clientsystem-Schnittstelle zum VSDM 2.0</li> </ul>"},{"location":"spec-vsdm2/#branch-modell","title":"Branch Modell","text":"<p>In diesem Repository werden Branches verwendet um den Status der Weiterentwicklung und das Review von \u00c4nderungen abzubilden. Folgende Branches werden verwendet</p> <ul> <li> <p>main (enth\u00e4lt den letzten freigegebenen Stand der Entwicklung; besteht permanent)</p> </li> <li> <p>develop (enth\u00e4lt den Stand der fertig entwickelten Features und wird zum Review durch Industriepartner und Gesellschafter verwendet; basiert auf main; nach Freigabe erfolgt ein merge in main und ein Release wird erzeugt; besteht permanent)</p> </li> <li> <p>feature/ilf (in feature branches werden neue Features entwickelt (ggf. basierend auf develop); nach Fertigstellung erfolgt ein merge in develop; der feature branch wird nach dem merge gel\u00f6scht)</p> </li> </ul>"},{"location":"spec-vsdm2/#lizenzbedingungen","title":"Lizenzbedingungen","text":"<p>Copyright (c) 2022 gematik GmbH</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"spec-vsdm2/#api-dokumentation-vsdm-20","title":"API Dokumentation VSDM 2.0","text":"<p>Wie oben erw\u00e4hnt, wird das VSDM 2.0 auf die Verwendung einer RESTful FHIR-API reduziert, die hier dokumentiert ist:</p> <p>vsdm2.yaml.</p>"},{"location":"spec-vsdm2/#kontakt","title":"Kontakt","text":"<p>Gehen Sie zu https://www.gematik.de oder OSPO@gematik.de</p>"},{"location":"spec-vsdm2/docs/temp/","title":"Temp","text":""},{"location":"spec-vsdm2/docs/temp/#specification-vsdm-2-fhir-profiles-and-api","title":"Specification VSDM 2 FHIR-Profiles and API","text":"<p>This repo holds FHIR-Profiles, sample Resources and OpenAPI specification for the VSDM 2 interface.</p> <ul> <li>Specification VSDM 2 FHIR-Profiles and API</li> <li>What is VSDM 2</li> <li>FHIR Profiles VSDM 2</li> <li>API Documentation VSDM 2</li> <li>License</li> <li>Contact</li> </ul>"},{"location":"spec-vsdm2/docs/temp/#what-is-vsdm-2","title":"What is VSDM 2","text":"<p>The Versichertenstammdatenmanagement VSDM was introduced around 2017 and both provides patient democraphic data to healthcare professionals and proof of treatement to be used in quarterly statements to the KV. All these use cases make use of Konnektor, eHealth Card Terminals, eGK, SMC-B, Intermedi\u00e4r and finaly the insurant provider's VSDM backend services.</p> <ul> <li>VSDM 2 firstly decouples the proof-of-treatment (\"Proof-of-Patient-Presence PoPP) from the use case of providing demographic data. So the PoPP can be used in other applications, too.</li> <li>Secondly, all the named infrastructure-components formed an unfexible and time consuming use case environment. So VSDM 2 reduces dependencies to those components.</li> <li>Finally, with the TI 2.0 initiative, the whole infrastructure will get modernized and updated to state of the art security and architecture principles.</li> </ul> <p>VSDM 2 basically will become a simple application, where a healthcare professional can (and in most cases should) get demographic and additional billing information AFTER a PoPP was determined. So the insurant providers provide a simple FHIR-REST-API where doctor's office client software \"just\" requests additional data by providing a legitimate PoPP-token.</p> <p></p>"},{"location":"spec-vsdm2/docs/temp/#fhir-profiles-vsdm-2","title":"FHIR Profiles VSDM 2","text":"<p>The first VSDM used a proprietary XML data format in a SOAP-service-chain. VSDM 2 migrates to the FHIR-standard that is used more and more in the German healthcare sector. The FHIR-profiles and sample resources will be published in the official VSDM 2 simplifier project.</p>"},{"location":"spec-vsdm2/docs/temp/#api-documentation-vsdm-2","title":"API Documentation VSDM 2","text":"<p>As stated above, the VSDM 2 will be reduced to the use of a small RESTful FHIR-API, that is documented here vsdm2.yaml.</p>"},{"location":"spec-vsdm2/docs/temp/#license","title":"License","text":"<p>See LICENSE</p>"},{"location":"spec-vsdm2/docs/temp/#contact","title":"Contact","text":"<p>Please refer to https://www.gematik.de or OSPO@gematik.de</p>"},{"location":"spec-vsdm2/docs/vsdm_ablauf_ps/","title":"Abl\u00e4ufe im PS","text":"<p>Aufnahme des Versicherten</p> <p>Im Prim\u00e4rsystem dient bei der Anmeldung die eGK und zuk\u00fcnftig die GesundheitsID des Versicherten zur Aufnahme bzw. Identifikation des Versicherten. </p> <p>Dies beinhaltet   - die Herstellung des Versorgungskontextes   - den Abruf der VSD beim Fachdienst VSDM 2.0   - den Abruf der Pr\u00fcfziffer f\u00fcr die Abrechnung   - bei unbekannten Versicherten das Anlegen des Patientenstammblatts   - bei bekannten Versicherten ggf. das Aktualisieren des Patientenstammblatts</p> <p>Beim ersten Kontakt des Versicherten im laufenden Quartal muss das PS den Abruf der VSD beim Fachdienst VSDM durchf\u00fchren. Bei Folgebesuchen des Versicherten im laufenden Quartal kann immer ein erneuter Abruf der VSD erfolgen, um \u00c4nderungen in den VSD in das PS \u00fcbernehmen zu k\u00f6nnen. Dies kann insbesondere wichtig sein in Bezug auf Anpassungen zum Versicherungsschutz oder zur Kostenabdeckung. </p> <p>Patientenstammblatt anlegen</p> <p>Ist ein Versicherten beim Besuch der LEI bis dahin unbekannt, muss eine neues Patientenstammblatt angelegt werden. Dies kann unmittelbar an den Abruf der VSD gekoppelt sein, d.H. nach dem Erhalt der VSD erstellt das PS automatisch ein Patientenstammblatt und \u00fcberf\u00fchrt alle Informationen aus dem Abruf der VSD.  Der Nutzer soll einen Hinweis erhalten, dass der Versicherte noch nicht im PS existiert und eine neues Patientenstammblatt angelegt wird.</p> <p>Patientenstammblatt anzeigen</p> <p>Existiert bereits ein Patientenstammblatt, soll das PS den Abruf der VSD automatisch starten wenn das Patientenstammblatt im Rahmen eines Folgebesuchs ge\u00f6ffnet wird. Liegt im laufenden Quartal noch keine Pr\u00fcfziffer vor muss der Abruf der VSD erfolgen. Das PS soll dem Nutzer die M\u00f6glichkeit bieten, den Abruf der VSD manuell zu starten.</p> <p>Die Anzeige des zum Versicherten geh\u00f6rigen Patientenstammblatt kann auf unterschiedliche Arten erfolgen:</p> <ul> <li>Automatische Identifikation des Patientenstammblatts im PS anhand der KVNR durch Stecken der eGK oder Verwendung der GesundheitsID des Versicherten</li> <li>Manuelle Identifikation des Patientenstammblatts des Versicherten, z.B. anhand des Namens und Geburtsdatums </li> </ul> <p>Bei der automatischen Identifikation soll die Zuordnung von Versichertem und Patientenstammblatt im PS \u00fcber die KVNR erfolgen, da diese einen eindeutigen Bezug zum Versicherten herstellt.</p> <p>Auf welche Weise der Aufnahmeprozess durchgef\u00fchrt wird, wird in der Konfiguration des PS festgelegt oder ist ein Leistungsmerkmal des PS. Empfohlen wird die automatische Unterst\u00fctzung einer Neuanlage oder Aktualisierung des Patientenstammblatts.</p> <p>Konfigurationsparameter zum online Abruf VSD im PS |       |         |       | |:-------------:|:---------------:|:-------------:| | MODE_ONLINE_CHECK | ALWAYS (Immer) | Ein Abruf VSD wird ungeachtet eines vorangegangenen Abrufs immer angefordert | | MODE_ONLINE_CHECK | FIRST (Quartal) | Ein online Abruf VSD wird nur beim ersten Kontakt im Quartal angefordert. Die Pr\u00fcfung wird wiederholt, wenn der vorangegangene Abruf wegen technischer Probleme abgebrochen wurde | | MODE_ONLINE_CHECK | USER (Benutzerinteraktion) | Der Nutzer entscheidet individuell \u00fcber die Durchf\u00fchrung eines Abrufs VSD. Falls das PS die Notwendigkeit einer Online-Pr\u00fcfung festgestellt hat, sollte dies in Form einer Best\u00e4tigung erfolgen. |</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/","title":"VSD vom Fachdienst abrufen","text":"<p>Der Anwendungsfall erm\u00f6glicht dem Leistungserbringer, - das g\u00fcltige Versicherungsverh\u00e4ltnis beim erstmaligen Quartalsbesuch zu pr\u00fcfen, - die jeweils zum Besuch aktuellen VSD und - die Pr\u00fcfziffer f\u00fcr die Abrechnung zu erhalten</p> <p>Vorraussetzungen f\u00fcr die Durchf\u00fchrung des VSDM-Anwendungsfalls ist die Herstellung des Versorgungskontextes. Versorgungskontext bedeutet, dass ein Zusammenhang zwischen einem berechtigten Versicherten und einer behandelnden oder versorgenden Leistungserbringerinstitution (LEI) hergestellt wird.</p> <p>Der Versorgungskontext wird durch die folgenden Schritte realisiert: - Authentisierung der LEI am PoPP-Service mittels einer SM-B Identit\u00e4t (Karte oder HSM) - Authentisierung des Versicherten mittels eGK oder GesundheitsID</p> <p>Nach der erfolgreichen Authentisierung der LEI und des Versicherten wird das Vorhandensein des Versorgungskontextes in Form eines PoPP-Tokens, welcher an das PS \u00fcbergeben wird, attestiert. Anschlie\u00dfend kann das Prim\u00e4rsystems den PoPP-Token als Autorisierung verwenden, um den Abruf der Versichertenstammdaten am Fachdienst VSDM 2.0 durchzuf\u00fchren. Die Herstellung des Versorgungskontextes ist nur beim ersten Besuch des Versicherten im laufenden Quartal notwendig. Bei Folgebesuchen kann der im PS bereits vorhandene PoPP-Token f\u00fcr jeden weiteren Abruf der VSD im laufenden Quartal verwendet werden.</p> <p>Die Authentisierung der LEI gegen\u00fcber dem PoPP-Dienst und gegen\u00fcber dem Fachdienst ist einmal am Tag erforderlich. Zuk\u00fcnftig kann der Versicherte auch die GesundheitsID in Verbindung mit einem Frontend des Versicherten (FdV) nutzen, um sich gegen\u00fcber dem PoPP-Dienst zu authentisieren.</p> <p>Die Anwendungsf\u00e4lle zur Authentisierung des Versicherten und der LEI sind im Dokument [gemSpec_PoPP_Service] beschrieben.</p> <p>\u00dcbersicht der Varianten beim Abruf VSD</p> <p>Die nachfolgend aufgef\u00fchrte Tabelle stellt die m\u00f6glichen Varianten des Anwendungsfalls Abruf VSD dar.</p> <p>Tabelle \u00dcbersicht Varianten Abruf VSD | Variante | Art des Besuchs | Versicherter | VSD | Bemerkung | | :-- | :---------- | :---------- | :---------- | ------------ | | 1 | 1. x im Quartal | unbekannter Versicherter | mit Aktualisierung | \u00dcbertragung VSD und Anlage Patientenstammblatt | | 2 | 1. x im Quartal | bekannter Versicherter | ohne Aktualisierung | keine \u00dcbertragung VSD | | 3 | 1. x im Quartal | bekannter Versicherter | mit Aktualisierung | \u00dcbertragung VSD und Aktualisierung Patientenstammblatt | | 4 | Folgebesuch | bekannter Versicherter | ohne Aktualisierung | keine \u00dcbertragung VSD | | 5 | Folgebesuch | bekannter Versicherter | mit Aktualisierung | \u00dcbertragung VSD und Aktualisierung Patientenstammblat |</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/#varianten-des-abrufs-der-vsd","title":"Varianten des Abrufs der VSD","text":""},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/#variante-1","title":"Variante 1","text":"<p>Ein unbekannter Versicherter wird in der LEI als Patient aufgenommen</p> <p>Eingangsbedingung: - Abruf der VSD erfolgt erstmalig f\u00fcr einen unbekannten Versicherten - Versicherter authentisiert sich mit eGK oder GesundheitsID - LEI ist am PoPP-Service registriert und angemeldet - Dienstlokalisierung des FD VSDM 2.0 ist erfolgt</p> <p>Vorraussetzungen: - Versorgungskontext ist in Form einen vorliegenden PoPP-Tokens attestiert - PoPP-Token liegt im PS vor - KVNR und IK-Nummer sind im PS gespeichert (z.B. im Patientenstammblatt)</p> Nr Aktivit\u00e4t Komponente Beschreibung 1 VSD am FD anfragen PS Zur Anfrage an den zust\u00e4ndigen Fachdienst wird der g\u00fcltige Versorgungskontextnachweis in Form eines PoPP-Tokens, der Access-Token und der VSD-\u00c4nderungsindikator (ETag) \u00fcbertragen. ETag muss auf \"0\" gesetzt werden 2 Access-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen Access-Token und leitet den Request an den FD weiter. 3 PoPP-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen PoPP-Token und leitet den Request an den FD weiter. 4 KVNR \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt dem FD VSDM die KVNR in Form des Elements patientId des HTTP-Headers ZETA-PoPP-Token-Content zur Lokalisierung der VSD-Version und der Versichertenstammdaten. 5 VSD-Version pr\u00fcfen FD Der FD f\u00fchrt beim Aufruf der HTTP-GET-Operation vor der Verarbeitung eines Versichertenstammdatensatzes\u00a0eine VSD-Aktualit\u00e4tspr\u00fcfung durch 6 VSD lokalisieren FD Der FD f\u00fchrt bei Unterschieden in der VSD Version zwischen PS und FD eine Lokalisierung der VSD anhand der KVNR durch und ruft diese ab 7 PZ und VSD \u00fcbermitteln FD Der FD \u00fcbermittelt die Pr\u00fcfziffer, den etag_value und die VSD an den HTTP-Proxy des ZT-Clusters 8 PZ und VSD an PS \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt die Pr\u00fcfziffer, den etag_value und die VSD an das PS 9 PZ und VSD speichern PS Die \u00fcbermittelte PZ, der etag_value und die VSD werden gespeichert <p>Nachbedingung - PS: Die VSD wurden im Patientenstammblatt gespeichert - PS: Die Pr\u00fcfziffer ist im PS gespeichert - PS: der etag_value wurde aktualisiert</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/#variante-2-und-3","title":"Variante 2 und 3","text":"<p>Ein der LEI bereits bekannter Versicherter wird zum ersten Mal im laufenden Quartal als Patient behandelt. In Variante 2 erfolgt keine Aktualisierung der VSD.</p> <p>Eingangsbedingung: - Abruf der VSD erfolgt erstmalig im Quartal f\u00fcr einen bekannten Versicherten - Versicherter authentisiert sich mit eGK oder GesundheitsID - LEI ist am PoPP-Service registriert und angemeldet - Dienstlokalisierung des FD VSDM 2.0 ist erfolgt</p> <p>Vorraussetzungen: - Versorgungskontext ist in Form einen vorliegenden PoPP-Tokens attestiert - PoPP-Token liegt im PS vor - KVNR und IK-Nummer sind im PS gespeichert (z.B. im Patientenstammblatt)</p> Nr Aktivit\u00e4t Komponente Beschreibung 1 VSD am FD anfragen PS Zur Anfrage an den zust\u00e4ndigen Fachdienst wird der g\u00fcltige Versorgungskontextnachweis in Form eines PoPP-Tokens, der Access-Token und der VSD-\u00c4nderungsindikator (ETag) \u00fcbertragen. 2 Access-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen Access-Token und leitet den Request an den FD weiter. 3 PoPP-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen PoPP-Token und leitet den Request an den FD weiter. 4 KVNR \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt dem FD VSDM die KVNR in Form des Elements patientId des HTTP-Headers ZETA-PoPP-Token-Content zur Lokalisierung der VSD-Version und der Versichertenstammdaten. 5 VSD-Version pr\u00fcfen FD Der FD f\u00fchrt beim Aufruf der HTTP-GET-Operation vor der Verarbeitung eines Versichertenstammdatensatzes\u00a0eine VSD-Aktualit\u00e4tspr\u00fcfung auf Basis der KVNR durch 6.1 PZ \u00fcbermitteln FD Der FD \u00fcbermittelt bei \u00dcbereinstimmung des etag_values mit dem \u00c4nderungsindikator die Pr\u00fcfziffer und den etag_value an den HTTP-Proxy des ZT-Clusters 6.2 VSD lokalisieren FD Der FD \u00fcbermittelt bei Unterschieden zwischen etag_value und dem \u00c4nderungsindikator die auf Basis der KVNR lokalisierten VSD, die Pr\u00fcfziffer und den etag_value an den HTTP-Proxy des ZT-Clusters 7 PZ und ggf. VSD an PS \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt die Pr\u00fcfziffer, den etag_value und bei Unterschieden in der VSD Version die VSD an das PS 8 PZ und ggf. VSD speichern PS Die \u00fcbermittelte PZ, der etag_value und bei Unterschieden in der VSD Version die VSD werden gespeichert <p>Schritt 6.1: Variante 2 ohne Aktualisierung VSD Schritt 6.2: Variante 3 mit Aktualisierung VSD</p> <p>Nachbedingung - PS: Variante 3 - Die VSD sind im Patientenstammblatt aktualisiert - PS: Die Pr\u00fcfziffer ist im PS gespeichert - PS: der etag_value wurde aktualisiert</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/#variante-4-und-5","title":"Variante 4 und 5","text":"<p>Ein der LEI bereits bekannter Patient wird im Rahmen eines Folgebesuchs behandelt und ist bereits im laufenden Quartal aufgenommen/ behandelt worden. In Variante 4 erfolgt keine Aktualisierung der VSD.</p> <p>Eingangsbedingung: - Abruf der VSD erfolgt erneut im laufenden Quartal f\u00fcr einen bekannten Versicherten - Dienstlokalisierung des FD VSDM 2.0 ist erfolgt</p> <p>Vorraussetzungen: - PoPP-Token liegt im PS vor (aus erstem VSD-Abruf des laufenden Quartals) - KVNR und IK-Nummer sind im PS gespeichert (z.B. im Patientenstammblatt)</p> Nr Aktivit\u00e4t Komponente Beschreibung 1 VSD am FD anfragen PS Zur Anfrage an den zust\u00e4ndigen Fachdienst wird der g\u00fcltige Versorgungskontextnachweis in Form eines PoPP-Tokens, der Access-Token und der VSD-\u00c4nderungsindikator (ETag) \u00fcbertragen. 2 Access-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen Access-Token und leitet den Request an den FD weiter. 3 PoPP-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen PoPP-Token und leitet den Request an den FD weiter. 4 KVNR \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt dem FD VSDM die KVNR in Form des Elements patientId des HTTP-Headers ZETA-PoPP-Token-Content zur Lokalisierung der VSD-Version und der Versichertenstammdaten. 5 VSD-Version pr\u00fcfen FD Der FD f\u00fchrt beim Aufruf der HTTP-GET-Operation vor der Verarbeitung eines Versichertenstammdatensatzes\u00a0eine VSD-Aktualit\u00e4tspr\u00fcfung auf Basis der KVNR durch 6.1 PZ \u00fcbermitteln FD Der FD \u00fcbermittelt bei \u00dcbereinstimmung des etag_values mit dem \u00c4nderungsindikator die Pr\u00fcfziffer und den etag_value an den HTTP-Proxy des ZT-Clusters 6.2 VSD lokalisieren FD Der FD \u00fcbermittelt bei Unterschieden zwischen etag_value und dem \u00c4nderungsindikator die auf Basis der KVNR lokalisierten VSD, die Pr\u00fcfziffer und den etag_value an den HTTP-Proxy des ZT-Clusters 7 PZ und ggf. VSD an PS \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt die Pr\u00fcfziffer, den etag_value und bei Unterschieden in der VSD Version die VSD an das PS 8 PZ und ggf. VSD speichern PS Die \u00fcbermittelte PZ, der etag_value und bei Unterschieden in der VSD Version die VSD werden gespeichert <p>Schritt 6.1: Variante 4 ohne Aktualisierung VSD Schritt 6.2: Variante 5 mit Aktualisierung VSD</p> <p>Nachbedingung - PS: Variante 5 - Die VSD sind im Patientenstammblatt aktualisiert - PS: Die Pr\u00fcfziffer ist im PS gespeichert - PS: der etag_value wurde aktualisiert</p> <p>Anmerkung Der Patient muss weder seine eGK oder GesundheitsID verwenden noch muss ein neuer PoPP-Token vom PoPP-Service bezogen werden, da der im PS bereits vorliegende PoPP-Token f\u00fcr alle Folgebesuche im laufenden Quartal verwendet werden kann.</p> <p>Hinweise zum Entity Tag (ETag)</p> <p>Der ETag oder auch VSD-\u00c4nderungsindikator dienst dazu, die Version der VSD eindeutig zu identifizieren. Der ETag selbst ist eine Zeichenkette. Erh\u00e4lt das PS Versichertenstammdaten vom Fachdienst VSDM 2.0 wird durch diesen auch ein ETag \u00fcbertragen. Dieser wird im PS gespeichert und darf nicht ver\u00e4ndert werden. Wird ein erneuter Abruf der VSD gestartet, \u00fcbertr\u00e4gt das PS diesen ETag. Der Fachdienst vergleicht den Wert des ETags mit dem VSD-\u00c4nderungsindikator des Fachdienstes. Stimmen die Werte des ETags aus dem Request und des VSD-\u00c4nderungsindikators nicht \u00fcberein, werden als Ergebnis die VSD an das PS gesendet. Liegt dem PS bei einer Anfrage an den Fd noch kein VSD-\u00c4nderungsindikator vor, muss der ETag Wert durch das PS auf Null gesetzt werden.</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsfaelle/#vsd-von-egk-lesen","title":"VSD von eGK lesen","text":"<p>Dieser Anwendungsfall kommt dann zum tragen, wenn die VSD nicht online vom Fachdienst der Kasse abgerufen werden k\u00f6nnen. Die LEI muss dann in der Lage sein, die vorhandenen Daten von der eGk zu lesen, anzuzeigen und speichen zu k\u00f6nnen. Die erhaltenen Daten dienen dann zur Nutzung von bereits etablierten Ersatzverfahren ausserhalb des VSDM 2.0. Das PS muss in der Lage sein, die eGK mit den in der LEI vorhandenen Kartenleseger\u00e4ten auslesen zu k\u00f6nnen. Das k\u00f6nnen sowohl eHealth-Kartenterminals als auch handels\u00fcbliche USB Smartcard-Reader sein.  Die Daten werden aus dem ungesch\u00fctzten Bereich der eGK aus den Containern PD und VD gelesen. Zu beachten ist, dass sich auf der eGk einerseits der komplette VSD-Datensatz und andererseits auch ein verk\u00fcrzter Datensatz (siehe gemSpec_VSDM2, Kapitel \"7.2\u00a0Informationsmodell verk\u00fcrzte VSD auf eGK\") befinden kann. Keiner dieser Datens\u00e4tze kann jedoch den notwendigen Abruf der VSD im laufenden Quartal ersetzen, da es sich lediglich um statische Daten auf der eGK handelt. Eine Aktualisierung der VSD auf der eGK findet nicht statt.</p> <p>Auslesen der VSD mittels eHealth-Kartenterminal</p> <p>Die in der LEI bereits vorhandenen eHealth_Kartenterminals (eHKT), welche mit dem Konnektor gepairt sind, k\u00f6nnen weiterhin zum Auslesen der VSD von der eGK verwendet werden. Die Schnittstelle I_VSDService stellt daf\u00fcr die Operation ReadVSD zum Lesen der VSD zur Verf\u00fcgung. Im PS muss folgender Konfigurationsparameter verwendet werden:</p> Konfigurationsparameter zum Lesen der VSD MODE-ONLINE-CHECK / NEVER / Eine Online-Pr\u00fcfung wird niemals vom PS angefordert <p>Parametrisierung ReadVSD</p> ReadVSD Paramter ReadOnlineReceipt=false PerformOnlineCheck=false <p>Auslesen der VSD mittels handels\u00fcblichem USB Smartcard-Reader</p> <p>F\u00fcr das Aulesen der VSD kann alternativ zum eHKT auch ein handels\u00fcblicher Smartcard-Reader verwendet werden. Dieser ist an das PS angeschlossen und liefert die VSD aus den frei auslesbaren Containern der eGK zur \u00dcbernahme direkt in das PS. Die Beteiligung eines Konnektors und eHKT f\u00fcr das Auslesen der eGK findet in diesem Szeanrio nicht statt. Das PS muss f\u00fcr dieses Szenarion entsprechend erweitert werden.  F\u00fcr die Implementierung kann das nachfolgend verlinkte Beispielprogramm zum Auslesen der eGK bei Nutzung eines USB Smartcard_Readers genutzt werden:</p> <p>Beispielprogramm zum Auslesen der eGK</p> <p>Hinweis 1: Die Daten werden ausgelesen und decodiert in einer Log-Datei angezeigt (auch als XML). Hinweis 2: Das Programm pr\u00fcft NICHT die Echtheit der eGK.</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsszenarien/","title":"Anwendungsszeanarien aus Sicht der Sektoren","text":""},{"location":"spec-vsdm2/docs/vsdm_anwendungsszenarien/#niedergelassener-sektor","title":"Niedergelassener Sektor","text":"<p>Die Aufnahme eines Patienten in einer Arzt-/ Zahnarztpraxis oder in psychotherapeutischen Praxen folgt typischerweise einem standardisierten Prozess, der je nach Art der Praxis und organisatorischen Abl\u00e4ufen leicht variieren kann. Um eine Behandlung durchf\u00fchren und abrechnen zu k\u00f6nnen ist in jedem Fall die Herstellung des Versorgungskontextes sowie der sich daran anschlie\u00dfende Abruf der Versichertenstammdaten (VSD) notwendig. F\u00fcr jeden Versicherten wird ein Patientenstammblatt angelegt (der Begriff kann variieren und ist nicht mit der elektonischen Patientenakte zu verwechseln) die alle relevanten medizinischen und administrativen Daten enth\u00e4lt. Das Patientenstammblatt ist integrativer Teil des Prim\u00e4rsystems und dient sowohl der Dokumentation als auch der Nachverfolgbarkeit des Behandlungsverlaufs und ist f\u00fcr eine korrekte Diagnose, Therapie und Nachsorge unerl\u00e4sslich. F\u00fcr Versicherte die der Praxis noch nicht bekannt sind wird ein Patientenstammblatt im Zusammenhang mit dem Abruf der VSD angelegt. Existiert zum Versicherten bereits ein Patientenstammblatt wird diese im Laufe der Behandlung fortgeschrieben und aktualsiert. Der Abruf der VSD muss immer beim ersten Besuch des Versicherten im laufenden Quartal durchgef\u00fchrt werden. Auch bei Folgebesuchen im entsprechenden Quartal kann der Leistungserbringer (LE) einen Abruf der VSD durchf\u00fchren, um auch unterquartalige \u00c4nderungen in den VSD im PS zu dokumentieren. Das PS muss zudem auch die bei jedem Abruf mitgelieferte Pr\u00fcfziffer f\u00fcr Abrechnungsunterlagen speichern. </p> <p>Kann der Abruf der VSD zur Herstellung des Versorgungskontextes nicht erfolgen (z.B. aus technischen Gr\u00fcnden) muss die Aufnahme des Versicherten \u00fcber ein definiertes Ersatzverfahren erfolgen (Regelungen innerhalb des BMV-\u00c4).</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsszenarien/#stationarer-sektor","title":"Station\u00e4rer Sektor","text":"<p>Die Versorgung innerhalb eines Krankenhauses unterscheidet sich vom niedergelassenen Sektor in sofern, dass eine Aufnahme des Versicherten an verschiedenen Stellen erfolgen kann. </p> <p>Der Abruf der VSD im Rahmen der Aufnahme oder Erfassung erfolgt hier - in der ambulanten Versorgung durch einen f\u00fcr die ambulante Versorgung erm\u00e4chtigten Arzt - in der Notaufnahme der Rettungstelle f\u00fcr eine Akutversorgung (z.B. Einlieferung durch den Rettungswagen oder Selbsteinweisung des Versicherten) - in der Zentralaufnahme bei der station\u00e4re Versorgung (geplante Einweisung auf Grundlage eines Einweisungsscheins)</p>"},{"location":"spec-vsdm2/docs/vsdm_anwendungsszenarien/#apotheken","title":"Apotheken","text":"<p>Apotheken ben\u00f6tigen f\u00fcr die Versorgung eines Versicherten im Rahmen der Bereitstellung von Medikamenten keine Stammdaten. Der Abruf der VSD kann die Apotheken aber in ihren prozessualen Abl\u00e4ufen unterst\u00fctzen, z.B. durch das Anlegen und Bef\u00fcllen eines Kundenstamms.  </p>"},{"location":"spec-vsdm2/docs/vsdm_errorcodes/","title":"Fehlerbehandlung","text":"<p>Im Arbeitsablauf des Nutzers k\u00f6nnen Fehler beim Abruf der VSD vom Fachdienst VSDM 2.0 auftreten. Da vom Nutzer kein technisches Vorwissen erwartet werden darf sind Fehlermeldungen so anzugeben, dass dieser nach M\u00f6glichkeit darauf reagieren kann. Hierbei sollen Fehlermeldungen so aufbereitet werden, dass der Nutzer versteht welches System im Prozess den Fehler verursacht hat. Au\u00dferdem sollen bei technischen Fehlern diese sprachlich aufbereitet werden, so dass der Nutzer den Inhalt des Fehlers verstehen kann.</p> <p>Nutzer sollen an der Anwendungsoberfl\u00e4che des Prim\u00e4rsystems eine Handlungsanweisung erhalten die ihm erlauben, auf Warnungen und Fehlermeldungen in geeigneter Weise reagieren zu k\u00f6nnen.</p> <p>Die nachfolgenden Tabellen der Fehlercodes sollen als Auszug einen \u00dcberblick \u00fcber m\u00f6gliche Fehlersituationen vermitteln. Die Fehlertexte in den Tabellen enthalten Kurzbeschreibungen der Fehler und sind keine Vorgaben f\u00fcr Fehlermeldungen des Prim\u00e4rsystems. Hier soll der Hersteller darauf achten, f\u00fcr die Zielgruppe verst\u00e4ndliche Formulierungen zu verwenden.</p> <p>Fehlermeldungen am PS</p> Code Anzeige Handlungsempfehlung VSDSERVICE_INVALID_IK Ung\u00fcltige oder nicht bekannte\u00a0 Institutionskennung (ik). Nachweis zum Versorgungskontext mittels eGK oder GesundheitsID am PoPP-Service 1 x erneuern. Bei erneutem Fehler: Abbruch, da wahrscheinlich ein Implementierungsfehler vorliegt (Clientsystem oder PoPP-Service) oder die KTR gar nicht bei diesem FD-Anbieter ist (fehlerhafter DNS-Eintrag). VSDSERVICE_INVALID_KVNR Ung\u00fcltige oder nicht bekannte Krankenversichertennummer\u00a0(kvnr). Nachweis zum Versorgungskontext mittels eGK oder GesundheitsID am PoPP-Service 1 x erneuern. Bei erneutem Fehler: Abbruch, da wahrscheinlich ein Implementierungsfehler vorliegt (Clientsystem oder PoPP-Service) VSDSERVICE_PATIENT_RECORD_NOT_FOUND Die Versichertenstammdaten zur Versichertennummer (kvnr) konnten f\u00fcr die Institutionskennung  nicht ermittelt werden. Nachweis zum Versorgungskontext mittels eGK oder GesundheitsID am PoPP-Service 1 x erneuern. Bei erneutem Fehler: Abbruch, da wahrscheinlich ein Implementierungsfehler vorliegt (Clientsystem,\u00a0PoPP-Service oder Schnittstelle zu KTR-Bestandssystemen). VSDSERVICE_MISSING_OR_INVALID_HEADER Der erforderliche HTTP-Header (header) fehlt oder ist undg\u00fcltig. Im Falle des Headers PoPP: Nachweis zum Versorgungskontext mittels eGK oder GesundheitsID am PoPP-Service 1 x erneuern. Bei erneutem Fehler: Abbruch, da wahrscheinlich ein Implementierungsfehler vorliegt (Clientsystem). VSDSERVICE_UNSUPPORTED_MEDIATYPE Der vom Clientsystem angefragte Medientyp (media type) wird nicht unterst\u00fctzt. ./. (Implementierungsfehler) VSDSERVICE_UNSUPPORTED_ENCODING Das vom Clientsystem angefragte Komprimierungsverfahren\u00a0(encoding scheme) wird nicht unterst\u00fctzt. ./. (Implementierungsfehler) VSDSERVICE_INVALID_PATIENT_RECORD_VERSION Der \u00c4nderungsindikator  kann nicht verarbeitet werden. ./. (Implementierungsfehler) VSDSERVICE_INVALID_HTTP_OPERATION Die HTTP-Operation (http-operation) wird nicht unterst\u00fctzt. ./. (Implementierungsfehler) VSDSERVICE_INVALID_ENDPOINT Der angefragte Endpunkt (endpoint) wird nicht unterst\u00fctzt.\u00a0 ./. (Implementierungsfehler) <p>Fehlermeldungen des Fachdienstes VSDM</p> Code Anzeige Handlungsempfehlung VSD_SERVICE_INTERNAL_SERVER_ERROR Unerwarteter interner Fehler des Fachdienstes VSDM.\u00a0 Wiederholungsversuch in 15 Minuten Abst\u00e4nden. Abbruch nach 8 Versuchen. VSDSERVICE_VSDD_NOTREACHABLE Fachdienst VSDM ist f\u00fcr den Kostentr\u00e4ger (ik) nicht erreichbar. Wiederholungsversuch in 15 Minuten Abst\u00e4nden. Abbruch nach 8 Versuchen. VSDSERVICE_VSDD_TIMEOUT Fachdienst VSDM f\u00fcr den Kostentr\u00e4ger (ik)\u00a0hat das Zeitlimit f\u00fcr eine Antwort \u00fcberschritten.\u00a0 Wiederholungsversuch in 15 Minuten Abst\u00e4nden. Abbruch nach 8 Versuchen."},{"location":"spec-vsdm2/docs/vsdm_errorcodes/#beispiel","title":"Beispiel","text":"<p>Abbruch des Anwendungsfall \"Abruf VSD\" aufgrund ung\u00fcltiger KVNR</p> <p>Variante: Ein unbekannter Versicherter wird in der LEI als Patient aufgenommen</p> <p>Eingangsbedingung: - Abruf der VSD erfolgt erstmalig f\u00fcr einen unbekannten Versicherten - Versicherter authentisiert sich mit eGK oder GesundheitsID - LEI ist am PoPP-Service registriert und angemeldet - Dienstlokalisierung des FD VSDM 2.0 ist erfolgt</p> <p>Vorraussetzungen: - Versorgungskontext ist in Form einen vorliegenden PoPP-Tokens attestiert - PoPP-Token liegt im PS vor - KVNR und IK-Nummer sind im PS gespeichert (z.B. im Patientenstammblatt)</p> Nr Aktivit\u00e4t Komponente Beschreibung 1 VSD am FD anfragen PS Zur Anfrage an den zust\u00e4ndigen Fachdienst wird der g\u00fcltige Versorgungskontextnachweis in Form eines PoPP-Tokens, der Access-Token und der VSD-\u00c4nderungsindikator (ETag) \u00fcbertragen. ETag muss auf \"0\" gesetzt werden 2 Access-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen Access-Token und leitet den Request an den FD weiter. 3 PoPP-Token pr\u00fcfen ZT-Cluster Der HTTP-Proxy des ZT-Clusters pr\u00fcft auf g\u00fcltigen PoPP-Token und leitet den Request an den FD weiter. 4 KVNR \u00fcbermitteln ZT-Cluster Der HTTP-Proxy des ZT-Clusters \u00fcbermittelt dem FD VSDM die KVNR in Form des Elements patientId des HTTP-Headers ZETA-PoPP-Token-Content zur Lokalisierung der VSD-Version und der Versichertenstammdaten. 5 VSD-Version pr\u00fcfen FD Der FD f\u00fchrt beim Aufruf der HTTP-GET-Operation vor der Verarbeitung eines Versichertenstammdatensatzes\u00a0eine VSD-Aktualit\u00e4tspr\u00fcfung durch 6 Fehler zur\u00fcckgeben FD Der FD kann zu der KVNR keine VSD lokalisieren und gibt den Fehler VSDSERVICE_INVALID_KVNR zur\u00fcck 7 Fehler anzeigen PS Das PS zeigt die Fehlerbeschreibung an: Ung\u00fcltige oder nicht bekannte Krankenversichertennummer (kvnr) 8 Handlungsempfehlung anzeigen PS Das PS zeigt die Handlungsempfehlung f\u00fcr den Fehlercode an <p>Nachbedingung - PS: Die VSD wurden wurden nicht im Patientenstammblatt gespeichert - PS: Die Pr\u00fcfziffer ist nicht im PS gespeichert - PS: der etag_value wurde nicht aktualisiert</p>"},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/","title":"FHIR in VSDM 2.0","text":"<p>FHIR-Profile im VSDM 2.0 Kontext Folgende FHIR-Profile sind im VSDM 2.0 -Kontext relevant und werden von den verschiedenen Beteiligten definiert:</p> Beteiligter FHIR-Projekt KBV KBV DAV DAV GKV ... gematik ..."},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#fhir-releases","title":"FHIR Releases","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#testportal","title":"Testportal??","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#referenzierung-von-fhir-objekten-un-bundles","title":"Referenzierung von FHIR-Objekten un Bundles","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#tools-und-hinweise-zu-fhir","title":"Tools und Hinweise zu FHIR","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#vsdm-fhir-beispiele","title":"VSDM FHIR-Beispiele","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#konvertierung-von-fhir-xml-und-json","title":"Konvertierung von FHIR XML und JSON","text":""},{"location":"spec-vsdm2/docs/vsdm_fhir_infos/#rwferenzen-in-bundles-und-parameters-objekten","title":"Rwferenzen in Bundles und Parameters Objekten","text":""},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/","title":"1 Hinweise zum Informationsmodell VSDM 2.0","text":"<p>Mit der Einf\u00fchrung von VSDM 2.0 wird FHIR (Fast Healthcare Interoperability Resources) zur Daten\u00fcbertragung verwendet.  Ziel der FHIR-Implementierung f\u00fcr VSDM 2.0 ist eine konsistente Datenhaltung und einen effizienten Austausch von Versichertenstammdaten zwischen dem Fachdienst VSDM 2.0 und den Prim\u00e4rsystemen zu gew\u00e4hrleisten. FHIR bietet hierf\u00fcr eine Grundlage, die sich flexibel an spezifische Anforderungen anpassen l\u00e4sst.</p>"},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/#logical-model","title":"Logical Model","text":"<p>Das Logical Model beschreibt die Struktur der Versichertenstammdaten aus fachlicher Sicht. Es dient als Grundlage f\u00fcr die Ableitung von FHIR-Profilen und unterst\u00fctzt die Kommunikation zwischen Fachdom\u00e4ne und technischer Umsetzung. Jedes Element des Datensatzen wird wiefolgt beschrieben: - Name des Attributs - Kardinalit\u00e4t - Datentyp - Beschreibung - Definition</p> <p>Link Simplifier LogicalModelVSDM2.0</p> <p>Die nachfolgenden Logical Models \"Versichertendaten\" und \"Versicherungsdaten\" dienen zur Beschreibung der VSD und als Grundlage zur Definition der FHIR-Profile f\u00fcr VSDM 2.0.</p> <p>Weitere in den FHIR-Profilen Patient und Coverage befindliche Felder aus dem Basisdatensatz werden bei der Bef\u00fcllung und \u00dcbertragung des Datensatzes nicht beachtet. Das Logical Model bildet den kompletten VSD-Datensatz ab.</p>"},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/#versichertendaten","title":"Versichertendaten","text":""},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/#versicherungsdaten","title":"Versicherungsdaten","text":"<p>Anmerkung: Die konkrete Ausgestaltung des Datensatzes befindet sich noch in Absprache zwischen den Gesellschaftern. Die in Abstimmung befindlichen Felder sind im Logical Model auf Simplifier mit \"WIP\" (WorkInProgress) gekennzeichnet. Die Festlegungen hierzu werden in einem sp\u00e4teren Release nachgef\u00fchrt.</p>"},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/#mapping","title":"Mapping","text":"<p>Das Mapping beschreibt die Zuordnung der Attribute des Logical Models f\u00fcr Versicherungsdaten zu den entsprechenden Feldern in einer FHIR-Ressource Coverage und Patient. </p> <p>Ziel ist es sicherzustellen, dass die Daten aus dem Logical Model korrekt in beide Zielsysteme transformiert werden k\u00f6nnen.</p> <p>Die Mappingtabellen zu Patient und Coverage befinden sich hier:</p> <p>Mapping logicalmodel-FHIR-Profile</p>"},{"location":"spec-vsdm2/docs/vsdm_informationsmodell/#2-hinweise-zum-verkurzten-vsd-datensatz-auf-der-egk","title":"2. Hinweise zum verk\u00fcrzten VSD-Datensatz auf der eGK","text":"<p>Gem\u00e4\u00df den gesetzlichen Vorgaben aus \u00a7291 SGB V muss die eGK, wenn sie nach dem 1. Januar 2026 herausgegeben wird, die Speicherung folgender Daten erm\u00f6glichen:</p> <ul> <li>die Bezeichnung der ausstellenden Krankenkasse, einschlie\u00dflich eines Kennzeichens f\u00fcr die Kassen\u00e4rztliche Vereinigung, in deren Bezirk der Versicherte seinen Wohnsitz hat</li> <li>der Familienname und der Vorname des Versicherten</li> <li>das Geburtsdatum des Versicherten</li> <li>die Krankenversichertennummer des Versicherten</li> </ul> <p>Die Restdaten befinden sich in folgenden Containern der eGK: - Allgemeine Versicherungsdaten - Pers\u00f6nliche Versichertendaten</p> <p>Der Container \"Gesch\u00fctzte Versichertendaten\" wird nicht mehr bef\u00fcllt.</p> <p>Die Bereitstellung der Daten erfolgt mittels eines angepassten VSD Schemas auf der Basis des in VSDM 1 verwendeten Schemas VSD 5.2.</p> <p>XML-Schema zum verk\u00fcrzten VSD-Datensatz</p>"},{"location":"spec-vsdm2/docs/vsdm_kontext_popp_zt/","title":"VSDM 2.0 im Kontext PoPP und ZeroTrust","text":"<p>\u00dcberblick Zusammenspiel der Anwendungen</p> <p></p> <p>VSDM 2.0 setzt voraus, dass der Versorgungskontext f\u00fcr einen zu behandelnden Versicherten in Form eines PoPP-Tokens vom Prim\u00e4rsystem via PoPP-Client und PoPP-Service bezogen wurde, um den Anwendungsfall zum Abruf der VSD durchf\u00fchren zu k\u00f6nnen.</p> <p>Proof of Patient Presence\u00a0(PoPP) ist ein Nachweis, der belegt, dass sich\u00a0ein Versicherter zu einem bestimmten Zeitpunkt in einem Versorgungskontext mit einer bestimmten Leistungserbringerinstitution (LEI) befindet. Im kryptografisch gesicherten PoPP-Token sind somit Informationen \u00fcber die LEI und \u00fcber den Versicherten zusammengef\u00fchrt. Dabei ist es die Aufgabe der PoPP-L\u00f6sung, die Authentifizierung der LEI durchzuf\u00fchren und durch Authentifizierung des Versicherten per GesundheitsID oder Authentifizierung der elektronischen Gesundheitskarte (eGK) eines Versicherten, an einem eHealth-Kartenterminal oder handels\u00fcblichen USB Smartcard-Reader,\u00a0den Versorgungskontext zu best\u00e4tigen. Das Ergebnis ist das PoPP-Token, welches der LEI zur Autorisierung f\u00fcr den Zugriff auf die Daten des Versicherten in Diensten der Telematikinfrastruktur (TI) dient.</p> <p>Der http Proxy des ZETA Guards stellt sicher, dass nur Requests mit g\u00fcltigem Access Token sowie bestandenen zus\u00e4tzlichen Pr\u00fcfungen an den Ressource Server weitergeleitet werden. Welche Pr\u00fcfungen zus\u00e4tzlich erfolgen, wird \u00fcber Attribute im Access Token gesteuert.</p>"},{"location":"spec-vsdm2/docs/vsdm_pruefziffer/","title":"Hinweise zur Pr\u00fcfziffer","text":"<p>Im Gegensatz zu VSDM 1.0 wird mit VSDM 2.0 vom Fachdienst kein Pr\u00fcfungsnachweis mehr sondern die Pr\u00fcfziffer an das Prim\u00e4rsystem \u00fcbergeben. </p> <p>Bei einer erfolgreichen Durchf\u00fchrung einer VSD-Anfrage wird    - bei erstmaligem Abruf im laufenden Quartal und   - bei jedem weiteren Abruf der VSD im laufenden Quartal</p> <p>die Pr\u00fcfziffer unabh\u00e4ngig davon, ob sich \u00c4nderungen in den VSD ergeben haben an das Prim\u00e4rsystem \u00fcbermittelt.</p> <p>Das Prim\u00e4rsystem muss die Pr\u00fcfziffer zur Erstellung der Abrechnungsunterlagen speichern. </p> <p>Dieser Leitfaden zur Implementierung trifft keine Aussage dar\u00fcber, ob jede im laufenden Quartal erhaltene Pr\u00fcfziffer gespeichert werden muss oder eine \u00dcberschreibung der vorhandenen Pr\u00fcfziffer erfolgen soll. </p> <p>Die Regelungen dazu werden im Anforderungskatalog KVDT (KBV_ITA_VGEX_Anforderungskatalog_KVDT) getroffen und m\u00fcssen durch das Prim\u00e4rsystem entsprechend umgesetzt werden.</p> <p>Beispiele f\u00fcr \u00dcbertragung der Pr\u00fcfziffer sind in [gemSpec_VSDM2] dargestellt und beschrieben.</p>"},{"location":"spec-vsdm2/docs/vsdm_psinteraktionen/","title":"Vsdm psinteraktionen","text":""},{"location":"spec-vsdm2/docs/vsdm_psinteraktionen/#interaktionen-des-primarsystems","title":"Interaktionen des Prim\u00e4rsystems","text":"<p>Diese Seite enth\u00e4lt Hinweise und Empfehlungen zur Interaktion des Prim\u00e4rsystems mit dem Nutzer im VSDM 2.0 - Kontext</p> <p>Durch die in den Arztpraxen, Krankenh\u00e4usern oder Apotheken eingesetzten Clientsysteme soll vor allem die Interoperabilit\u00e4t, Benutzerfreundlichkeit und Sicherheit sichergestellt werden. Das Prim\u00e4rsystem sollte einfach und intuitiv zu bedienen sein, so dass Nutzer (\u00c4rzte, Praxispersonal) in ihren t\u00e4glichen Arbeitsabl\u00e4ufen unterst\u00fctzt werden. Nachfolgend werden Interaktionen des PS mit dem Nutzer aufgef\u00fchrt, die helfen k\u00f6nnen den Prozess m\u00f6glichst nutzerfreundlich zu gestalten. Ein Anspruch auf Vollst\u00e4ndigkeit bei der Abdeckung der Aufnahmeprozesse besteht nicht und die hier beschriebenen Inhalte sind als Interpretationshilfe zu verstehen. Der L\u00f6sungsraum geht dar\u00fcber hinaus.</p>"},{"location":"spec-vsdm2/docs/vsdm_psinteraktionen/#ps-interaktionen-im-kontext-abruf-vsd","title":"PS-Interaktionen im Kontext Abruf VSD","text":"<p>Hinweis bei Start Abruf VSD</p> <p>Der Nutzer soll einen Hinweis durch das PS erhalten wenn der Abruf der VSD gestartet wird.</p> <p>Abruf VSD kann nicht durchgef\u00fchrt werden</p> <p>Der Nutzer soll einen Hinweis erhalten wenn der Abruf VSD aufgrund Nichterreichbarkeit des Fachdienstes nicht durchgef\u00fchrt werden konnte.</p> <p>Abruf VSD bei fehlender Pr\u00fcfziffer</p> <p>Das PS soll dem Nutzer einen Hinweis anzeigen wenn der Abruf der VSD aufgrund einer fehlenden Pr\u00fcfziffer erforderlich ist. Die kann der Fall sein, wenn ein vorangegangener Abruf VSD nicht erfolgreich durchgef\u00fchrt werden konnte.</p> <p>Abruf VSD erfolgreich durchgef\u00fchrt</p> <p>Das PS soll dem Nutzer die VSD anzeigen wenn der Abruf fehlerfrei durchgef\u00fchrt wurde.</p> <p>Anzeige Delta VSD</p> <p>Das PS soll dem Nutzer nach dem Abruf der VSD und vor der \u00dcbernahme / Speicherung ge\u00e4nderte VSD im Vergleich zu bereits vorhandenen VSD anzeigen, z.B. Vergleich Alt/Neu mit Hervorhebung der Ver\u00e4nderungen.</p> <p>Fehlerfall Abruf VSD Das PS soll dem Nutzer im Fehlerfall eine aussagekr\u00e4ftige Meldung mit der Fehlerursache angezeigen, damit das Ersatzverfahren eingeleitet werden kann.</p> <p>Hinweis Versicherungsschutz Der Nutzer erh\u00e4lt einen Hinweis wenn kein Leistungsanspruch aufgrund der Pr\u00fcfung des Zeitraums zwischen \"Beginn Versicherungsschutz\" und \"Ende\" vorliegt.</p> <p>Hinweis ruhender Leistungsanspruch</p> <p>Der Nutzer erh\u00e4lt einen Hinweis wenn aufgrund eines ruhenden Leistungsanspruchs kein, oder nur ein eingeschr\u00e4nkter Leistungsanspruch besteht.</p>"},{"location":"spec-vsdm2/docs/vsdm_statuscodes/","title":"VSDM 2.0 API-Dokumentation Fehlerbehandlung am VSDM 2.0 Fachdienst","text":"<p>Der Fachdienst VSDM 2.0 stellt eine http-Schnittstelle f\u00fcr den Aufruf durch das Clientsystem bereit. Das Ergebnis der Operation wird in der Verwendung von Http-Status-Codes gem\u00e4\u00df [RFC2616] mitgeteilt. Folgende http Status Codes k\u00f6nnen Clients bei der Benutzung der Schnittstellen des VSDM-Fachdienstes erwarten. Fehler k\u00f6nnen sowohl im inneren http-Requests (bei fachlichen Fehlern) als auch im \u00e4u\u00dferen http-Request auftreten.</p>"},{"location":"spec-vsdm2/docs/vsdm_statuscodes/#status-codes","title":"Status Codes","text":"http Operation M\u00f6gliche http Statuscodes Bedeutung/Fehlerdetails Resource-Server GET /vsdservice/v1/vsdmbundle 200 Anfrage konnte erfolgreich bearbeitet werden. Versichertenstammdaten (VSDMBundle) und Pr\u00fcfziffer sind in der Antwort enthalten. 304 Anfrage konnte erfolgreich bearbeitet werden. Das Clientsystem besitzt schon die aktuellsten Versichertenstammdaten und es erfolgt keine Aktualisierung. Der Pr\u00fcfziffer ist in der Antwort enthalten. 400 79010, 79011, 79030, 79031, 79032, 79205, 79206, 79207, 79400, 79401, 79402 403 79041 404 79020 405 79040 428 79033 500 79100 502 79110 504 79111"},{"location":"zeta/","title":"Macro Syntax Error","text":"<p>File: <code>zeta/index.md</code></p> <p>Line 7 in Markdown file: expected token 'end of statement block', got 'name' <pre><code>{% include badge.html name=\"release_notes\" %}\n</code></pre></p>"},{"location":"zeta/docs/branch-modell/","title":"Branch Modell","text":"<p>Im ZETA GitHub Repository werden Branches verwendet um den Status der Weiterentwicklung und das Review von \u00c4nderungen abzubilden.</p> <p>Folgende Branches werden verwendet:</p> <ul> <li>main (enth\u00e4lt den letzten freigegebenen Stand der Entwicklung; besteht permanent)</li> <li>develop (enth\u00e4lt den Stand der fertig entwickelten Features und wird zum Review durch Industriepartner und Gesellschafter verwendet; basiert auf main; nach Freigabe erfolgt ein merge in main und ein Release wird erzeugt; besteht permanent)</li> <li>feature/name (in feature branches werden neue Features entwickelt; basiert auf develop; nach Fertigstellung erfolgt ein merge in develop; wird nach dem merge gel\u00f6scht)</li> <li>hotfix/name (in hotfix branches werden Hotfixes entwickelt; basiert auf main; nach Fertigstellung erfolgt ein merge in develop und in main; wird nach dem merge gel\u00f6scht)</li> <li>concept/name (in concept branches werden neue Konzepte entwickelt; basiert auf develop; dient der Abstimmung mit Dritten; es erfolgt kein merge; wird nach Bedarf gel\u00f6scht)</li> <li>misc/name (nur f\u00fcr internen Gebrauch der gematik; es erfolgt kein merge; wird nach Bedarf gel\u00f6scht)</li> </ul>"},{"location":"zeta/docs/api/zeta-api-versionen/","title":"ZETA API Versionen","text":"<ul> <li>ZETA API v1</li> </ul>"},{"location":"zeta/docs/api/v1/","title":"Macro Syntax Error","text":"<p>File: <code>zeta/docs/api/v1/index.md</code></p> <p>Line 7 in Markdown file: expected token 'end of statement block', got 'name' <pre><code>{% include badge.html name=\"zeta_api\" %}\n</code></pre></p>"},{"location":"zeta/docs/zeta-guard/","title":"Macro Syntax Error","text":"<p>File: <code>zeta/docs/zeta-guard/index.md</code></p> <p>Line 7 in Markdown file: expected token 'end of statement block', got 'name' <pre><code>{% include badge.html name=\"zeta_guard\" %}\n</code></pre></p>"}]}